Coupled
    {
    Type = Root
    Name = Model01
    Ports = 0; 0
    Description = 
    Graphic
        {
        Position = 0; 0
        Dimension = 600; 600
        Direction = Right
        Color = 15
        Icon = 
        Window = 5000; 5000; 5000; 5000
        }
    Parameters
        {
        }
    System
        {
        Atomic
            {
            Name = Event Triggered Transition0
            Ports = 1 ; 1
            Path = petri\event_triggered_transition.h
            Description = Event Triggered transition of a Petri Net
            Graphic
                {
                Position = -5340 ; 540
                Dimension = 180 ; 720
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                }
            }
        Atomic
            {
            Name = Place0
            Ports = 1 ; 1
            Path = petri\place.h
            Description = Place of a Petri Net
            Graphic
                {
                Position = -3660 ; 540
                Dimension = 720 ; 720
                Direction = Right
                Color = 15
                Icon = %petrinets%place.svg
                }
            Parameters
                {
                tokens = Str; 4 ; Initial tokens at place  (Scilab expression)
                time = Str; 0 ; waiting time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Transition0
            Ports = 2 ; 1
            Path = petri/transition.h
            Description = Transition of a Petri Net
            Graphic
                {
                Position = -1515 ; 15
                Dimension = 180 ; 720
                Direction = Right
                Color = 1
                Icon = None
                }
            Parameters
                {
                time = Str; 0 ; Firing time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Place1
            Ports = 1 ; 1
            Path = petri\place.h
            Description = Place of a Petri Net
            Graphic
                {
                Position = -3660 ; -735
                Dimension = 720 ; 720
                Direction = Right
                Color = 15
                Icon = %petrinets%place.svg
                }
            Parameters
                {
                tokens = Str; 1 ; Initial tokens at place  (Scilab expression)
                time = Str; 0 ; waiting time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Place2
            Ports = 1 ; 1
            Path = petri\place.h
            Description = Place of a Petri Net
            Graphic
                {
                Position = -585 ; 15
                Dimension = 720 ; 720
                Direction = Right
                Color = 15
                Icon = %petrinets%place.svg
                }
            Parameters
                {
                tokens = Str; 0 ; Initial tokens at place  (Scilab expression)
                time = Str; 2 ; waiting time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Transition1
            Ports = 1 ; 1
            Path = petri/transition.h
            Description = Transition of a Petri Net
            Graphic
                {
                Position = 1035 ; 15
                Dimension = 180 ; 720
                Direction = Right
                Color = 1
                Icon = None
                }
            Parameters
                {
                time = Str; 0 ; Firing time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Square0
            Ports = 0 ; 1
            Path = sources\square_sci.h
            Description = Square wave generator
            Graphic
                {
                Position = -6780 ; 570
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sources%square.svg
                }
            Parameters
                {
                a = Str; 1 ; Amplitude (Scilab expression)
                f = Str; 0.15 ; Frecuency  (Scilab expression)
                d = Str; 50 ; Duty cycle [%]  (Scilab expression)
                }
            }
        Atomic
            {
            Name = GnuPlot0
            Ports = 1 ; 0
            Path = sinks/gnuplot.h
            Description = Plot input signal using GnuPlot
            Graphic
                {
                Position = -1005 ; 2790
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = %sinks%gnuplot.svg
                }
            Parameters
                {
                Inputs = Str; %Inputs ; Number of inputs
                Format = Str; set xrange [0:%tf] @ set grid @ set title 'Plot' ; General Formatting (use @ as line break)
                Format1 = Str; with steps title 'cola' ; Formatting options for input 1
                Format2 = Str;  ; Formatting options for input 2
                Format3 = Str;  ; Formatting options for input 3
                Format4 = Str;  ; Formatting options for input 4
                Format5 = Str;  ; Formatting options for input 5
                }
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Cmp ;  2 ;  1 ; -1
            PointX = -5025 ; -5025 ; -3840
            PointY = 900 ; 900 ; 900
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Cmp ;  3 ;  1 ; -1
            PointX = -2775 ; -1665 ; -1665
            PointY = -375 ; -375 ; 225
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Cmp ;  5 ;  1 ; -1
            PointX = -1200 ; -1200 ; -765
            PointY = 375 ; 375 ; 375
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; 0
            Sink = Cmp ;  6 ;  1 ; -1
            PointX = 300 ; 300 ; 885
            PointY = 375 ; 375 ; 375
            }
        Line
            {
            Source = Cmp ;  6 ;  1 ; 0
            Sink = Cmp ;  4 ;  1 ; -1
            PointX = 1350 ; 1350 ; -3840 ; -3840
            PointY = 375 ; -1650 ; -1650 ; -375
            }
        Line
            {
            Source = Cmp ;  7 ;  1 ; 0
            Sink = Cmp ;  1 ;  1 ; -1
            PointX = -6000 ; -6000 ; -5490
            PointY = 900 ; 900 ; 900
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Cmp ;  3 ;  2 ; -1
            PointX = -2775 ; -1665 ; -1665
            PointY = 900 ; 900 ; 525
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Cmp ;  8 ;  1 ; -1
            PointX = -2775 ; -2400 ; -2400 ; -1140
            PointY = 900 ; 900 ; 3150 ; 3150
            }
        }
    }
